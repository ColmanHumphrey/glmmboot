devtools::use_package("glmmTMB", "Suggests")
#devtools::use_package("glmmTMB", "Suggests",
devtools::use_package('pbapply', 'Suggest')
getwd()
load(file = '../../DanSwingley/package_code/data/test_data.Rdata')
devtools::use_data(test_data)
load(file = '../../DanSwingley/package_code/data/test_data.Rdata')
devtools::use_data(test_data)
devtools::use_data(test_data, overwrite = TRUE)
load(file = '../../DanSwingley/package_code/data/test_data.Rdata')
devtools::use_data(test_data, overwrite = TRUE)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::use_testthat()
devtools::use_readme_rmd()
devtools::use_vignette("Quick Usage Guide")
devtools::use_vignette("quick_use")
devtools::document()
devtools::check()
devtools::use_package('methods')
devtools::use_package('stats')
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
unlink('vignettes/quick_use_cache', recursive = TRUE)
devtools::check()
devtools::buid_win()
devtools::build_win()
devtools::build()
devtools::release()
devtools::release()
devtools::check()
devtools::document()
devtools::release()
devtools::release()
install.packages('pandoc')
devtools::release()
devtools::release()
devtools::use_news_md()
devtools::release()
devtools::release()
devtools::use_cran_comments()
devtools::release()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::build_win()
devtools::submit_cran()
devtools::build()
devtools::check()
devtools::build_win()
devtools::document()
devtools::use_travis()
devtools::release()
install.packages(c("bit", "broom", "callr", "caTools", "devtools", "digest", "elliptic", "evaluate", "expint", "foreign", "git2r", "glmmTMB", "glue", "haven", "highr", "igraph", "later", "leaflet", "mgcv", "modeltools", "munsell", "mvord", "mvtnorm", "OpenMx", "openssl", "ordinal", "packrat", "pillar", "pkgconfig", "PLordprob", "plotrix", "processx", "R.utils", "Rcpp", "RcppArmadillo", "RcppCNPy", "RCurl", "reprex", "rlang", "rmarkdown", "roxygen2", "rstantools", "sandwich", "scales", "stringdist", "stringi", "survival", "sys", "TH.data", "tidycensus", "TMB", "utf8", "xtable", "yaml", "zoo"))
devtools::release()
getwd()
devtools::release()
devtools::release()
devtools::release()
install.packages("git2r", type = "source")
install.packages("git2r", type = "source")
install.packages("git2r", type = "source")
require(git2r)
devtools::release()
devtools::release()
devtools::documents()
devtools::document()
devtools::release()
test('glmmboot')
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::release()
devtools::release()
devtools::release()
devtoools::document()
devtools::document()
devtools::release()
devtools::release()
devtools::release()
library(devtools)
install.packages('devtools')
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages('devtools', type = 'source'
)
install.packages('prettyunits')
install.packages('devtools')
library(devtools)
library(roxygen2)
library(testthat)
sessionInfo()
session_info()
devtools::document()
devtools::check()
devtools::build_win()
devtools::build()
devtools::release()
update.packages(c('digest', 'mime', 'openssl', 'ps', 'R6', 'Rcpp', 'rlang', 'rstudioapi'))
devtools::release()
